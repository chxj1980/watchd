#standard log level as syslog, case insensitive, value list:
### emerg for emergency
### alert
### crit for critical
### error
### warn for warning
### notice
### info
### debug
log_level = debug

# the base path to store data and log files
# the subdir logs for log files
base_path = /tmp

# the service name for current watchd instance
# the log filename as: watchd-$service_name.log, such as watchd-sample.log
service_name = sample

# how many days the log files should be kept
# default: 0
log_file_keep_days = 30

# unix group name to run this program,
# not set (empty) means run by the group of current user
run_by_group=

# unix user name to run this program,
# not set (empty) means run by current user
run_by_user=

# timeout for waiting the sub process exit, in milliseconds
# default: 300 ms
wait_subprocess_ms = 1000

# restart interval of the sub process, in milliseconds
# default: 1000 ms
restart_interval_ms = 10000

# check sub process alive interval in seconds
# 0 for never check
# default: 0 (never check)
check_alive_interval = 300

# retry threshold of check alive
# kill the sub process when the check fail count exceeds this parameter
# default: 3
check_alive_retry_threshold = 3

# if takeover the stdout of the sub process
# default: true
takeover_stdout = true

# if takeover the stderr of the sub process
# default: true
takeover_stderr = true

# subprocess number for the command line
# default: 1
subprocess_number = 1

# the extended parameter can be referred by subprocess_command
# the multi values splited by comma or use range format as: [start-end]
# following is an example:
# host_index = 0,1,2
# also can be configed like this:
host_index = [0-2]

#@set encoder_filename=/usr/local/etc/encoder.conf 

#@set encoder_port = $(grep ^inner_port  %{encoder_filename} | awk -F '=' '{print $2;}')

# one section for a group sub processes
# you can config more than one sections
[test1]

# the type: daemon or cron (for crontab)
# default: daemon
type = daemon

# the mode: all or failover
##  all: run all subprocess_command
##  failover:  run the first command,
##             run the second command when the first exit,
##             run the first command again when the last exit,
##             and so on.
# default: all
mode = failover

# if run by shell as: sh -c command
##  true or 1: run with sh -c command
##  false or 0: run command directly
##  auto: auto detect if need run by sh -c
# default auto
run_by_sh = auto

# force restart interval in seconds
# this parameter only for daemon
# default 0 for never force restart
force_restart_interval = 600

# set environment variable
# can ocur more than once
set_env = OMP_NUM_THREADS=4

# the command line of sub process
# can be a simple command line or a shell command as following three formats:
##  1. (command)
##  2. command > output_filename  or   command >> output_filename
##  3. command &
## the shell command line while be exec as: sh -c command_line
#subprocess_command = /bin/echo OMP_NUM_THREADS=$OMP_NUM_THREADS $host_index | awk '{print $1;}'
subprocess_command = /usr/local/bin/dfs_encoderd /usr/local/etc/encoder.conf --no-daemon restart

check_alive_interval = 10

check_alive_retry_threshold = 3

# check_alive_command can be a command or a library whose filename ends with .so)
## the check command output OK for check passed, others for fail
#
## the library must export c function:
##   int check_alive(int argc, char **argv);
##   argv[0] is the library filename, argv[1] is the first parameter and so on.
##   return 0 for success, != 0 for fail.
##
## for example:
##   #@function REPLACE_VARS
##   check_alive_command = /usr/local/lib/libdfscheckalive.so %{encoder_port} 2 30

#check_alive_command = echo OK

#@function REPLACE_VARS
check_alive_command = /usr/local/lib/libdfscheckalive.so %{encoder_port} 2 30

 
[test2]
type = cron
subprocess_command = ls -l / >> /tmp/ls.log

# the time base to schedule
# this parameter only for cron
time_base = 00:00

# repeat interval in seconds
# this parameter only for cron
repeat_interval = 60

takeover_stdout = false
takeover_stderr = false
